{
  "name": "Python",
  "color": "linear-gradient(135deg, #57B 0%, #57B 50%, #fd4 50%, #fd4 100%)",
  "template": "static",
  "type": "files",
  "files": {
    "index.html": "<html>\n\n<head>\n  <meta charset=\"utf-8\" />\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n  <link rel=\"stylesheet\" href=\"https://pyscript.net/releases/2024.3.1/core.css\">\n  <script type=\"module\" src=\"https://pyscript.net/releases/2024.3.1/core.js\"></script>\n\n  <script>\n    async function requested ( url, options = {} ) {\n      const res = await fetch( url, options );\n      if ( !res.ok ) {\n        throw new Error( res.statusText );\n      }\n      let contentType = \"application/text\";\n      if ( res.headers ) {\n        contentType = res.headers.get( 'content-type' );\n      };\n      if ( contentType ) {\n        if ( contentType.includes( 'application/json' ) ) {\n          return res.json();\n        } else if ( contentType.includes( 'text/plain' ) ) {\n          return res.text();\n        } else if ( contentType.includes( 'text/html' ) ) {\n          return res.text();\n        } else {\n          return res.blob();\n        }\n      } else {\n        return res.text();\n      }\n    };\n\n    // wrapper to log and return req\n    async function request ( url, options = {} ) {\n      let res = null;\n      try {\n        res = await requested( url, options );\n        console.log( res.slice( 0, 100 ) );\n      } catch ( e ) {\n        console.error( e );\n        res = e;\n      }\n      return res;\n    };\n  </script>\n</head>\n\n<body>\n  <div id=\"term\" style=\"background: #000;color: #fff;font-family: monospace;\">Starting Python...</div>\n\n  <script defer type=\"py\" src=\"./utils.py\" config=\"pyscript.json\"></script>\n  <script defer type=\"py\" src=\"./index.py\" config=\"pyscript.json\"></script>\n\n  <style>\n    #term {\n      min-height: 300px;\n    }\n\n    html,\n    body {\n      width: 100vw;\n      overflow-x: hidden;\n      padding: 0;\n      margin: 0;\n      background: #000;\n    }\n  </style>\n</body>\n\n</html>",
    "index.py": {
      "active": true,
      "code": "from io import StringIO\nimport pandas as pd\n\ndef gh(repo):\n  return f\"https://raw.githubusercontent.com/{repo}\"\n\nasync def main():\n  print(\"Running main script!\")\n  res = await window.request(\n    gh(\"plutoniumm/ifactorial\") + \\\n    \"/main/src/routes/data/R1.csv\"\n  )\n\n  df = pd.read_csv(StringIO(res))\n  print(df.head())\n\nasyncio.create_task(main())"
    },
    "pyscript.json": "{\n  \"packages\": [\n    \"pandas\"\n  ]\n}",
    "utils.py": "from pyscript import document, window\nimport asyncio\n\nout_div = document.querySelector(\"#term\")\nterminal = []\ndef print(*args):\n  terminal.append(\" \".join([str(arg) for arg in args]))\n  out_div.innerText = \"\\n >\".join(terminal)"
  }
}